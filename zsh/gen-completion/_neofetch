#compdef neofetch

# zsh completions for 'neofetch'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
    '--disable[Allows you to disable an info line from appearing]'
    '--osx[_buildversion on/off   Hide/Show Mac OS X build version.]'
    '--osx[_codename on/off       Hide/Show Mac OS X codename.]'
    '--os[_arch on/off            Hide/Show Windows architecture.]'
    '--speed[_type type           Change the type of cpu speed to display.]'
    '--cpu[_shorthand type        Shorten the output of CPU]'
    '--cpu[_cores on/off          Whether or not to display the number of CPU cores]'
    '--kernel[_shorthand on/off   Shorten the output of kernel]'
    '--uptime[_shorthand on/off   Shorten the output of uptime (tiny, on, off)]'
    '--refresh[_rate on/off       Whether to display the refresh rate of each monitor]'
    '--gpu[_shorthand on/off      Shorten the output of GPU (tiny, on, off)]'
    '--gtk[_shorthand on/off      Shorten output of gtk theme/icons]'
    '--gtk2[/off               Enable/Disable gtk2 theme/icons output]'
    '--gtk3[/off               Enable/Disable gtk3 theme/icons output]'
    '--shell[_path on/off         Enable/Disable showing $SHELL path]'
    '--shell[_version on/off      Enable/Disable showing $SHELL version]'
    '--battery[_num num           Which battery to display, default value is all]'
    '--battery[_shorthand on/off  Whether or not each battery gets its own line/title]'
    '--ip[_host url               Url to ping for public IP]'
    '--song[_shorthand on/off     Print the Artist/Title on seperate lines]'
    '--birthday[_shorthand on/off Shorten the output of birthday]'
    '--birthday[_time on/off      Enable/Disable showing the time in birthday output]'
    '--birthday[_format format    Format the birthday output. (Uses date cmd format)]'
    '--colors[x x x x x        Changes the text colors in this order:]'
    '--underline[/off          enable/disable the underline.]'
    '--underline[_char char       Character to use when underlining title]'
    '--line[_wrap on/off          Enable/Disable line wrapping]'
    '--bold[/off               Enable/Disable bold text]'
    '--prompt[_height num         Set this to your prompt height to fix issues with]'
    '--color[_blocks on/off       Enable/Disable the color blocks]'
    '--block[_width num           Width of color blocks in spaces]'
    '--block[_height num          Height of color blocks in lines]'
    '--block[_range start end     Range of colors to print as blocks]'
    '--progress[_char elapsed char total char]'
    '--progress[_border on/off    Whether or not to surround the bar with \[\]]'
    '--progress[_length num       Length in spaces to make the progress bars.]'
    '--progress[_colors num num   Colors to make the progress bar.]'
    '--cpu[_display mode1 mode2   Which shorthand to use and how CPU usage should be printed]'
    '--memory[_display mode       Which way should the memory progress bar be added]'
    '--battery[_display mode      Which way should the battery progress bar be added]'
    '--disk[_display mode         Which way should the disk progress bar be added]'
    '--image[Image source. Where and what image we display.]'
    '--size[0px | --size 20%    Size to make the image, takes pixels or a percentage.]'
    '--image[_position left/right Where to display the image: (Left/Right)]'
    '--crop[_mode mode            Which crop mode to use]'
    '--crop[_offset value         Change the crop offset for normal mode.]'
    '--xoffset[How close the image will be to the left edge of the]'
    '--yoffset[How close the image will be to the top edge of the]'
    '--gap[Gap between image and text.]'
    '--clean[Remove all cropped images]'
    '--ascii[Where to get the ascii from, Possible values:]'
    '--ascii[_colors x x x x x x  Colors to print the ascii art]'
    '--ascii[_distro distro       Which Distros ascii art to print]'
    '--ascii[_logo_size           Size of ascii logo.]'
    '--ascii[_bold on/off         Whether or not to bold the ascii logo.]'
    '--stdout[info          Launch neofetch in stdout mode which prints the info]'
    '--stdout[_separator string   String to use as a separator in stdout mode.]'
    '--scrot[/to/img        Take a screenshot, if path is left empty the screen-]'
    '--scrot[_cmd cmd             Screenshot program to launch]'
    '--config[/to/config    Specify a path to a custom config file]'
    '--config[Launch the script without a config file]'
    '--help[Print this text and exit]'
    '--test[Launch the script with all functions / options enabled.]'
    '-v[Display error messages.]'
    '-vv[Display a verbose log for error reporting.]'
    '*:filename:_files'
)

_arguments -s $arguments
